[
  {
    "id": "theorem_0",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [],
    "tactics": [
      "rewrite H",
      "rewrite H",
      "simpl",
      "auto",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_1",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "exists",
      "intros",
      "split",
      "rewrite H",
      "auto",
      "reflexivity",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_2",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "assert",
      "simpl",
      "rewrite H",
      "tauto",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_3",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: f x = y",
      "H: a -> b"
    ],
    "tactics": [
      "auto",
      "unfold",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_4",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: f x = y",
      "H: a \\/ b"
    ],
    "tactics": [
      "intros",
      "reflexivity",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_5",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: ~ a",
      "H: n <= m"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]",
      "rewrite H",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_6",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "induction n",
      "assert",
      "reflexivity",
      "auto",
      "split",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_7",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a -> b",
      "H: forall x : nat, x + 0 = x",
      "H: a \\/ b"
    ],
    "tactics": [
      "auto",
      "destruct H as [H1 H2]",
      "rewrite H",
      "reflexivity",
      "unfold",
      "induction n",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_8",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: f x = y",
      "H: exists x, P x"
    ],
    "tactics": [
      "induction n",
      "destruct H as [H1 H2]",
      "rewrite H",
      "simpl",
      "split",
      "unfold",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_9",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "induction n",
      "exists",
      "unfold",
      "split",
      "assert",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_10",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "induction n",
      "simpl",
      "unfold",
      "intros",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_11",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "tauto",
      "simpl",
      "split",
      "tauto",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_12",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a -> b",
      "H: a \\/ b"
    ],
    "tactics": [
      "rewrite H",
      "exists",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_13",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: a <-> b",
      "H: a /\\ b",
      "H: a -> b"
    ],
    "tactics": [
      "exists",
      "induction n",
      "rewrite H",
      "split",
      "tauto",
      "auto",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_14",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: a \\/ b",
      "H: a <-> b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "intros",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_15",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "apply H",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_16",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "unfold",
      "rewrite H",
      "tauto",
      "unfold",
      "tauto",
      "induction n",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_17",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: exists x, P x",
      "H: ~ a",
      "H: n = m"
    ],
    "tactics": [
      "intros",
      "induction n",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_18",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a /\\ b",
      "H: exists x, P x",
      "H: f x = y"
    ],
    "tactics": [
      "unfold",
      "rewrite H",
      "apply H",
      "unfold",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_19",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "unfold",
      "unfold",
      "rewrite H",
      "induction n",
      "intros",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_20",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a <-> b",
      "H: ~ a",
      "H: a /\\ b"
    ],
    "tactics": [
      "assert",
      "rewrite H",
      "intros",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_21",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a <-> b",
      "H: f x = y",
      "H: a /\\ b"
    ],
    "tactics": [
      "split",
      "apply H",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_22",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "rewrite H",
      "exists",
      "exists",
      "intros",
      "exists",
      "apply H",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_23",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: exists x, P x",
      "H: a /\\ b"
    ],
    "tactics": [
      "unfold",
      "destruct H as [H1 H2]",
      "tauto",
      "apply H",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_24",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a /\\ b",
      "H: n <= m"
    ],
    "tactics": [
      "rewrite H",
      "destruct H as [H1 H2]",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_25",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [],
    "tactics": [
      "assert",
      "reflexivity",
      "apply H",
      "simpl",
      "assert",
      "apply H",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_26",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a -> b"
    ],
    "tactics": [
      "unfold",
      "assert",
      "intros",
      "apply H",
      "reflexivity",
      "induction n",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_27",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: ~ a"
    ],
    "tactics": [
      "auto",
      "induction n",
      "split",
      "intros",
      "apply H",
      "apply H",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_28",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: n = m"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "tauto",
      "intros",
      "destruct H as [H1 H2]",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_29",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "tauto",
      "tauto",
      "simpl",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_30",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a -> b"
    ],
    "tactics": [
      "tauto",
      "auto",
      "apply H",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_31",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a -> b",
      "H: a \\/ b"
    ],
    "tactics": [
      "intros",
      "reflexivity",
      "rewrite H",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_32",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a <-> b",
      "H: n <= m",
      "H: n = m"
    ],
    "tactics": [
      "assert",
      "simpl",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_33",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: exists x, P x",
      "H: a <-> b"
    ],
    "tactics": [
      "induction n",
      "exists",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_34",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: n <= m"
    ],
    "tactics": [
      "apply H",
      "reflexivity",
      "destruct H as [H1 H2]",
      "exists",
      "destruct H as [H1 H2]",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_35",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: exists x, P x",
      "H: a -> b"
    ],
    "tactics": [
      "simpl",
      "rewrite H",
      "induction n",
      "reflexivity",
      "induction n",
      "reflexivity",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_36",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a \\/ b",
      "H: exists x, P x"
    ],
    "tactics": [
      "exists",
      "reflexivity",
      "destruct H as [H1 H2]",
      "unfold",
      "unfold",
      "unfold",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_37",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a <-> b",
      "H: n <= m"
    ],
    "tactics": [
      "tauto",
      "rewrite H",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_38",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [],
    "tactics": [
      "unfold",
      "exists",
      "tauto",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_39",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: exists x, P x",
      "H: a \\/ b",
      "H: a /\\ b"
    ],
    "tactics": [
      "tauto",
      "tauto",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_40",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "simpl",
      "tauto",
      "unfold",
      "reflexivity",
      "split",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_41",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a /\\ b",
      "H: ~ a",
      "H: a <-> b"
    ],
    "tactics": [
      "tauto",
      "rewrite H",
      "reflexivity",
      "assert",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_42",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a \\/ b",
      "H: a -> b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "split",
      "apply H",
      "simpl",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_43",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [],
    "tactics": [
      "induction n",
      "destruct H as [H1 H2]",
      "split",
      "unfold",
      "induction n",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_44",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: ~ a",
      "H: n = m",
      "H: n <= m"
    ],
    "tactics": [
      "tauto",
      "induction n",
      "induction n",
      "split",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_45",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "destruct H as [H1 H2]",
      "reflexivity",
      "reflexivity",
      "tauto",
      "induction n",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_46",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "reflexivity",
      "induction n",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_47",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: ~ a"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "tauto",
      "induction n",
      "assert",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_48",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [],
    "tactics": [
      "rewrite H",
      "reflexivity",
      "apply H",
      "tauto",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_49",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "unfold",
      "reflexivity",
      "apply H",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_50",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "auto",
      "auto",
      "apply H",
      "tauto",
      "simpl",
      "assert",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_51",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "auto",
      "reflexivity",
      "rewrite H",
      "apply H",
      "auto",
      "tauto",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_52",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: n <= m",
      "H: forall x : nat, x + 0 = x",
      "H: f x = y"
    ],
    "tactics": [
      "induction n",
      "unfold",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_53",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a <-> b"
    ],
    "tactics": [
      "exists",
      "tauto",
      "split",
      "tauto",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_54",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "unfold",
      "rewrite H",
      "tauto",
      "unfold",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_55",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: a \\/ b",
      "H: n <= m",
      "H: a -> b"
    ],
    "tactics": [
      "assert",
      "exists",
      "auto",
      "assert",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_56",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a <-> b",
      "H: a \\/ b",
      "H: ~ a"
    ],
    "tactics": [
      "unfold",
      "tauto",
      "intros",
      "apply H",
      "assert",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_57",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: exists x, P x",
      "H: a <-> b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "auto",
      "unfold",
      "assert",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_58",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "tauto",
      "auto",
      "simpl",
      "rewrite H",
      "rewrite H",
      "auto",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_59",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a /\\ b",
      "H: a -> b"
    ],
    "tactics": [
      "auto",
      "split",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_60",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: n = m",
      "H: a -> b"
    ],
    "tactics": [
      "unfold",
      "unfold",
      "destruct H as [H1 H2]",
      "simpl",
      "intros",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_61",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "reflexivity",
      "reflexivity",
      "intros",
      "simpl",
      "simpl",
      "tauto",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_62",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a <-> b"
    ],
    "tactics": [
      "unfold",
      "unfold",
      "assert",
      "exists",
      "induction n",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_63",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: a /\\ b"
    ],
    "tactics": [
      "simpl",
      "split",
      "apply H",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_64",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [],
    "tactics": [
      "assert",
      "auto",
      "assert",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_65",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "split",
      "rewrite H",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_66",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a -> b"
    ],
    "tactics": [
      "auto",
      "exists",
      "assert",
      "unfold",
      "apply H",
      "unfold",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_67",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "intros",
      "induction n",
      "auto",
      "destruct H as [H1 H2]",
      "exists",
      "assert",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_68",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [],
    "tactics": [
      "unfold",
      "split",
      "reflexivity",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_69",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: n <= m",
      "H: exists x, P x",
      "H: f x = y"
    ],
    "tactics": [
      "reflexivity",
      "apply H",
      "simpl",
      "destruct H as [H1 H2]",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_70",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "assert",
      "destruct H as [H1 H2]",
      "apply H",
      "tauto",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_71",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a <-> b"
    ],
    "tactics": [
      "exists",
      "tauto",
      "unfold",
      "reflexivity",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_72",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: ~ a",
      "H: forall x : nat, x + 0 = x",
      "H: n = m"
    ],
    "tactics": [
      "tauto",
      "rewrite H",
      "auto",
      "simpl",
      "assert",
      "split",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_73",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: ~ a"
    ],
    "tactics": [
      "split",
      "auto",
      "assert",
      "induction n",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_74",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "auto",
      "simpl",
      "apply H",
      "assert",
      "tauto",
      "tauto",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_75",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a /\\ b",
      "H: ~ a",
      "H: a <-> b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "split",
      "tauto",
      "split",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_76",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a \\/ b",
      "H: exists x, P x",
      "H: n = m"
    ],
    "tactics": [
      "auto",
      "unfold",
      "auto",
      "tauto",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_77",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: ~ a"
    ],
    "tactics": [
      "split",
      "unfold",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_78",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: n <= m",
      "H: exists x, P x"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "reflexivity",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_79",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [],
    "tactics": [
      "apply H",
      "rewrite H",
      "reflexivity",
      "reflexivity",
      "assert",
      "rewrite H",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_80",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a -> b"
    ],
    "tactics": [
      "intros",
      "destruct H as [H1 H2]",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_81",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "induction n",
      "exists",
      "reflexivity",
      "tauto",
      "simpl",
      "simpl",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_82",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "reflexivity",
      "assert",
      "unfold",
      "assert",
      "reflexivity",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_83",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: n <= m",
      "H: a -> b",
      "H: exists x, P x"
    ],
    "tactics": [
      "unfold",
      "assert",
      "rewrite H",
      "induction n",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_84",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a -> b",
      "H: n = m"
    ],
    "tactics": [
      "assert",
      "intros",
      "exists",
      "reflexivity",
      "tauto",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_85",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a \\/ b",
      "H: f x = y"
    ],
    "tactics": [
      "assert",
      "reflexivity",
      "tauto",
      "auto",
      "tauto",
      "reflexivity",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_86",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: n = m",
      "H: n <= m",
      "H: a /\\ b"
    ],
    "tactics": [
      "assert",
      "destruct H as [H1 H2]",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_87",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a /\\ b",
      "H: a -> b"
    ],
    "tactics": [
      "tauto",
      "assert",
      "auto",
      "destruct H as [H1 H2]",
      "tauto",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_88",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: exists x, P x"
    ],
    "tactics": [
      "assert",
      "split",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_89",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: n <= m",
      "H: forall x : nat, x + 0 = x",
      "H: a \\/ b"
    ],
    "tactics": [
      "intros",
      "exists",
      "split",
      "destruct H as [H1 H2]",
      "exists",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_90",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "intros",
      "intros",
      "assert",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_91",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: n <= m",
      "H: a <-> b",
      "H: exists x, P x"
    ],
    "tactics": [
      "auto",
      "auto",
      "simpl",
      "induction n",
      "reflexivity",
      "apply H",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_92",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: ~ a",
      "H: a \\/ b",
      "H: n <= m"
    ],
    "tactics": [
      "reflexivity",
      "destruct H as [H1 H2]",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_93",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: a \\/ b",
      "H: n = m"
    ],
    "tactics": [
      "tauto",
      "destruct H as [H1 H2]",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_94",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "tauto",
      "simpl",
      "tauto",
      "exists",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_95",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [],
    "tactics": [
      "simpl",
      "intros",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_96",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [],
    "tactics": [
      "auto",
      "induction n",
      "split",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_97",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "auto",
      "tauto",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_98",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: exists x, P x",
      "H: forall x : nat, x + 0 = x",
      "H: ~ a"
    ],
    "tactics": [
      "apply H",
      "apply H",
      "destruct H as [H1 H2]",
      "exists",
      "simpl",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_99",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: ~ a",
      "H: a <-> b"
    ],
    "tactics": [
      "induction n",
      "apply H",
      "tauto",
      "auto",
      "apply H",
      "reflexivity",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_100",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: exists x, P x",
      "H: f x = y",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "induction n",
      "destruct H as [H1 H2]",
      "reflexivity",
      "assert",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_101",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [],
    "tactics": [
      "apply H",
      "auto",
      "auto",
      "destruct H as [H1 H2]",
      "tauto",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_102",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: n <= m",
      "H: exists x, P x",
      "H: n = m"
    ],
    "tactics": [
      "exists",
      "assert",
      "destruct H as [H1 H2]",
      "apply H",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_103",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a <-> b",
      "H: n <= m"
    ],
    "tactics": [
      "tauto",
      "assert",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_104",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: n = m",
      "H: a /\\ b"
    ],
    "tactics": [
      "auto",
      "tauto",
      "assert",
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_105",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: n = m"
    ],
    "tactics": [
      "auto",
      "split",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_106",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: n <= m",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "simpl",
      "simpl",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_107",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: f x = y",
      "H: ~ a",
      "H: exists x, P x"
    ],
    "tactics": [
      "rewrite H",
      "tauto",
      "split",
      "apply H",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_108",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: n = m",
      "H: a \\/ b"
    ],
    "tactics": [
      "exists",
      "intros",
      "intros",
      "rewrite H",
      "assert",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_109",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [],
    "tactics": [
      "auto",
      "induction n",
      "simpl",
      "simpl",
      "induction n",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_110",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: n = m",
      "H: exists x, P x",
      "H: f x = y"
    ],
    "tactics": [
      "apply H",
      "destruct H as [H1 H2]",
      "exists",
      "induction n",
      "exists",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_111",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "auto",
      "destruct H as [H1 H2]",
      "apply H",
      "induction n",
      "apply H",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_112",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a \\/ b",
      "H: n <= m"
    ],
    "tactics": [
      "apply H",
      "split",
      "reflexivity",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_113",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [],
    "tactics": [
      "assert",
      "rewrite H",
      "simpl",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_114",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: f x = y",
      "H: n <= m",
      "H: a <-> b"
    ],
    "tactics": [
      "unfold",
      "apply H",
      "unfold",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_115",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "unfold",
      "unfold",
      "intros",
      "intros",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_116",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "tauto",
      "exists",
      "reflexivity",
      "rewrite H",
      "destruct H as [H1 H2]",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_117",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "reflexivity",
      "simpl",
      "intros",
      "rewrite H",
      "auto",
      "unfold",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_118",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: f x = y",
      "H: n = m"
    ],
    "tactics": [
      "apply H",
      "destruct H as [H1 H2]",
      "apply H",
      "split",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_119",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "reflexivity",
      "simpl",
      "destruct H as [H1 H2]",
      "assert",
      "reflexivity",
      "auto",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_120",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: n <= m",
      "H: a /\\ b",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "split",
      "destruct H as [H1 H2]",
      "intros",
      "destruct H as [H1 H2]",
      "assert",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_121",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "assert",
      "tauto",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_122",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a /\\ b",
      "H: f x = y",
      "H: a <-> b"
    ],
    "tactics": [
      "tauto",
      "simpl",
      "auto",
      "unfold",
      "intros",
      "induction n",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_123",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a -> b"
    ],
    "tactics": [
      "rewrite H",
      "destruct H as [H1 H2]",
      "reflexivity",
      "exists",
      "unfold",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_124",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "assert",
      "intros",
      "reflexivity",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_125",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [],
    "tactics": [
      "assert",
      "unfold",
      "split",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_126",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: n = m",
      "H: exists x, P x",
      "H: n <= m"
    ],
    "tactics": [
      "induction n",
      "apply H",
      "destruct H as [H1 H2]",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_127",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: n = m"
    ],
    "tactics": [
      "unfold",
      "auto",
      "simpl",
      "tauto",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_128",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a \\/ b",
      "H: a /\\ b"
    ],
    "tactics": [
      "auto",
      "exists",
      "split",
      "induction n",
      "apply H",
      "tauto",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_129",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: f x = y",
      "H: ~ a",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "unfold",
      "exists",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_130",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: n = m",
      "H: n <= m",
      "H: a \\/ b"
    ],
    "tactics": [
      "induction n",
      "simpl",
      "reflexivity",
      "reflexivity",
      "apply H",
      "split",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_131",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: n <= m",
      "H: a -> b",
      "H: n = m"
    ],
    "tactics": [
      "tauto",
      "apply H",
      "destruct H as [H1 H2]",
      "rewrite H",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_132",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [],
    "tactics": [
      "split",
      "destruct H as [H1 H2]",
      "reflexivity",
      "simpl",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_133",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [],
    "tactics": [
      "intros",
      "assert",
      "rewrite H",
      "intros",
      "tauto",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_134",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a -> b",
      "H: n = m",
      "H: a \\/ b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "tauto",
      "intros",
      "reflexivity",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_135",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: exists x, P x",
      "H: n <= m",
      "H: a /\\ b"
    ],
    "tactics": [
      "auto",
      "unfold",
      "destruct H as [H1 H2]",
      "tauto",
      "split",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_136",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a <-> b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "apply H",
      "apply H",
      "destruct H as [H1 H2]",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_137",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: n <= m",
      "H: ~ a",
      "H: n = m"
    ],
    "tactics": [
      "exists",
      "induction n",
      "assert",
      "reflexivity",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_138",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: n = m"
    ],
    "tactics": [
      "exists",
      "reflexivity",
      "tauto",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_139",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: exists x, P x",
      "H: n = m"
    ],
    "tactics": [
      "simpl",
      "reflexivity",
      "unfold",
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]",
      "unfold",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_140",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a -> b",
      "H: a \\/ b"
    ],
    "tactics": [
      "intros",
      "auto",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_141",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a \\/ b",
      "H: a -> b",
      "H: ~ a"
    ],
    "tactics": [
      "apply H",
      "simpl",
      "apply H",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_142",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "split",
      "assert",
      "assert",
      "simpl",
      "auto",
      "auto",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_143",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "tauto",
      "unfold",
      "intros",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_144",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: exists x, P x",
      "H: ~ a"
    ],
    "tactics": [
      "induction n",
      "tauto",
      "induction n",
      "exists",
      "apply H",
      "simpl",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_145",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "split",
      "intros",
      "apply H",
      "split",
      "simpl",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_146",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: a -> b"
    ],
    "tactics": [
      "reflexivity",
      "split",
      "assert",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_147",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "auto",
      "exists",
      "destruct H as [H1 H2]",
      "exists",
      "intros",
      "intros",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_148",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: f x = y",
      "H: n = m",
      "H: ~ a"
    ],
    "tactics": [
      "assert",
      "reflexivity",
      "assert",
      "unfold",
      "rewrite H",
      "tauto",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_149",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: exists x, P x",
      "H: ~ a",
      "H: a <-> b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "exists",
      "simpl",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_150",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "rewrite H",
      "unfold",
      "apply H",
      "assert",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_151",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: f x = y",
      "H: exists x, P x",
      "H: a \\/ b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "exists",
      "auto",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_152",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: ~ a",
      "H: n = m"
    ],
    "tactics": [
      "induction n",
      "split",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_153",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [],
    "tactics": [
      "unfold",
      "exists",
      "reflexivity",
      "reflexivity",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_154",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: n <= m",
      "H: exists x, P x"
    ],
    "tactics": [
      "intros",
      "induction n",
      "intros",
      "exists",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_155",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a <-> b",
      "H: ~ a",
      "H: a -> b"
    ],
    "tactics": [
      "reflexivity",
      "exists",
      "apply H",
      "simpl",
      "apply H",
      "induction n",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_156",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a <-> b",
      "H: n = m",
      "H: f x = y"
    ],
    "tactics": [
      "simpl",
      "auto",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_157",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a /\\ b",
      "H: exists x, P x"
    ],
    "tactics": [
      "auto",
      "assert",
      "exists",
      "destruct H as [H1 H2]",
      "split",
      "split",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_158",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "exists",
      "assert",
      "tauto",
      "auto",
      "auto",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_159",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a /\\ b",
      "H: a <-> b",
      "H: exists x, P x"
    ],
    "tactics": [
      "reflexivity",
      "rewrite H",
      "intros",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_160",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "induction n",
      "split",
      "tauto",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_161",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: ~ a",
      "H: a <-> b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "simpl",
      "unfold",
      "split",
      "destruct H as [H1 H2]",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_162",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a <-> b",
      "H: a -> b"
    ],
    "tactics": [
      "assert",
      "tauto",
      "assert",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_163",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a -> b",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "reflexivity",
      "split",
      "induction n",
      "induction n",
      "destruct H as [H1 H2]",
      "tauto",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_164",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: ~ a",
      "H: a -> b"
    ],
    "tactics": [
      "rewrite H",
      "rewrite H",
      "split",
      "assert",
      "split",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_165",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [],
    "tactics": [
      "rewrite H",
      "reflexivity",
      "rewrite H",
      "intros",
      "apply H",
      "induction n",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_166",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "unfold",
      "reflexivity",
      "rewrite H",
      "tauto",
      "assert",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_167",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [],
    "tactics": [
      "induction n",
      "simpl",
      "intros",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_168",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: f x = y",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "assert",
      "unfold",
      "reflexivity",
      "split",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_169",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "simpl",
      "auto",
      "unfold",
      "reflexivity",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_170",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "reflexivity",
      "induction n",
      "induction n",
      "split",
      "destruct H as [H1 H2]",
      "apply H",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_171",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [],
    "tactics": [
      "induction n",
      "rewrite H",
      "unfold",
      "tauto",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_172",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a \\/ b",
      "H: n = m"
    ],
    "tactics": [
      "unfold",
      "assert",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_173",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "unfold",
      "simpl",
      "unfold",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_174",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "tauto",
      "apply H",
      "split",
      "unfold",
      "split",
      "auto",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_175",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "split",
      "unfold",
      "apply H",
      "reflexivity",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_176",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a <-> b"
    ],
    "tactics": [
      "unfold",
      "exists",
      "intros",
      "split",
      "unfold",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_177",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [],
    "tactics": [
      "induction n",
      "destruct H as [H1 H2]",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_178",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: exists x, P x",
      "H: a /\\ b"
    ],
    "tactics": [
      "tauto",
      "reflexivity",
      "auto",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_179",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "simpl",
      "reflexivity",
      "destruct H as [H1 H2]",
      "apply H",
      "simpl",
      "split",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_180",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a <-> b",
      "H: exists x, P x",
      "H: f x = y"
    ],
    "tactics": [
      "rewrite H",
      "unfold",
      "destruct H as [H1 H2]",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_181",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "rewrite H",
      "apply H",
      "apply H",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_182",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [],
    "tactics": [
      "unfold",
      "rewrite H",
      "split",
      "rewrite H",
      "tauto",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_183",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: f x = y",
      "H: n <= m"
    ],
    "tactics": [
      "assert",
      "simpl",
      "reflexivity",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_184",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "unfold",
      "intros",
      "destruct H as [H1 H2]",
      "reflexivity",
      "reflexivity",
      "induction n",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_185",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a /\\ b",
      "H: a <-> b",
      "H: ~ a"
    ],
    "tactics": [
      "rewrite H",
      "assert",
      "auto",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_186",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "assert",
      "rewrite H",
      "destruct H as [H1 H2]",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_187",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: n = m"
    ],
    "tactics": [
      "induction n",
      "reflexivity",
      "exists",
      "exists",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_188",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: n <= m"
    ],
    "tactics": [
      "intros",
      "rewrite H",
      "rewrite H",
      "auto",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_189",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a <-> b"
    ],
    "tactics": [
      "tauto",
      "assert",
      "induction n",
      "unfold",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_190",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "tauto",
      "destruct H as [H1 H2]",
      "rewrite H",
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_191",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a <-> b",
      "H: exists x, P x"
    ],
    "tactics": [
      "simpl",
      "rewrite H",
      "destruct H as [H1 H2]",
      "rewrite H",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_192",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: ~ a",
      "H: f x = y",
      "H: a /\\ b"
    ],
    "tactics": [
      "simpl",
      "simpl",
      "auto",
      "split",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_193",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [],
    "tactics": [
      "induction n",
      "simpl",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_194",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a <-> b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "intros",
      "exists",
      "reflexivity",
      "reflexivity",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_195",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [],
    "tactics": [
      "auto",
      "assert",
      "split",
      "assert",
      "intros",
      "split",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_196",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "exists",
      "split",
      "assert",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_197",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "reflexivity",
      "apply H",
      "reflexivity",
      "reflexivity",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_198",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: n = m",
      "H: f x = y",
      "H: a /\\ b"
    ],
    "tactics": [
      "unfold",
      "induction n",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_199",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a -> b",
      "H: n = m",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "split",
      "exists",
      "reflexivity",
      "intros",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_200",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "simpl",
      "exists",
      "rewrite H",
      "exists",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_201",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: n = m",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "rewrite H",
      "apply H",
      "destruct H as [H1 H2]",
      "exists",
      "tauto",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_202",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a \\/ b",
      "H: n <= m",
      "H: exists x, P x"
    ],
    "tactics": [
      "simpl",
      "reflexivity",
      "exists",
      "reflexivity",
      "induction n",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_203",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a /\\ b",
      "H: exists x, P x"
    ],
    "tactics": [
      "auto",
      "induction n",
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_204",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a -> b",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "apply H",
      "simpl",
      "induction n",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_205",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [],
    "tactics": [
      "exists",
      "tauto",
      "destruct H as [H1 H2]",
      "induction n",
      "intros",
      "assert",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_206",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "simpl",
      "assert",
      "assert",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_207",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a -> b",
      "H: ~ a",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "assert",
      "rewrite H",
      "auto",
      "reflexivity",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_208",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: n <= m",
      "H: exists x, P x",
      "H: f x = y"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "induction n",
      "reflexivity",
      "exists",
      "simpl",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_209",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a -> b",
      "H: ~ a"
    ],
    "tactics": [
      "tauto",
      "rewrite H",
      "destruct H as [H1 H2]",
      "induction n",
      "assert",
      "tauto",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_210",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [],
    "tactics": [
      "auto",
      "rewrite H",
      "unfold",
      "tauto",
      "assert",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_211",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: a \\/ b",
      "H: a -> b"
    ],
    "tactics": [
      "auto",
      "induction n",
      "tauto",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_212",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a <-> b",
      "H: f x = y",
      "H: exists x, P x"
    ],
    "tactics": [
      "intros",
      "tauto",
      "destruct H as [H1 H2]",
      "auto",
      "tauto",
      "split",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_213",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [],
    "tactics": [
      "reflexivity",
      "reflexivity",
      "reflexivity",
      "induction n",
      "tauto",
      "destruct H as [H1 H2]",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_214",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: ~ a"
    ],
    "tactics": [
      "induction n",
      "unfold",
      "tauto",
      "reflexivity",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_215",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: f x = y",
      "H: a /\\ b"
    ],
    "tactics": [
      "assert",
      "destruct H as [H1 H2]",
      "unfold",
      "tauto",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_216",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: a -> b"
    ],
    "tactics": [
      "tauto",
      "auto",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_217",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: a <-> b"
    ],
    "tactics": [
      "split",
      "simpl",
      "destruct H as [H1 H2]",
      "split"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_218",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: exists x, P x",
      "H: n = m",
      "H: a \\/ b"
    ],
    "tactics": [
      "exists",
      "induction n",
      "induction n",
      "intros",
      "auto",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_219",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [],
    "tactics": [
      "simpl",
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]",
      "rewrite H",
      "unfold",
      "apply H",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_220",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: f x = y",
      "H: forall x : nat, x + 0 = x",
      "H: n <= m"
    ],
    "tactics": [
      "unfold",
      "exists",
      "simpl",
      "reflexivity",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_221",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a -> b"
    ],
    "tactics": [
      "simpl",
      "destruct H as [H1 H2]",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_222",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: exists x, P x",
      "H: a /\\ b",
      "H: ~ a"
    ],
    "tactics": [
      "auto",
      "reflexivity",
      "simpl",
      "split",
      "simpl",
      "unfold",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_223",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [],
    "tactics": [
      "intros",
      "unfold",
      "simpl",
      "rewrite H",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_224",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a /\\ b",
      "H: forall x : nat, x + 0 = x",
      "H: n = m"
    ],
    "tactics": [
      "assert",
      "intros",
      "assert",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_225",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [],
    "tactics": [
      "apply H",
      "assert",
      "tauto",
      "split",
      "destruct H as [H1 H2]",
      "split",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_226",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "assert",
      "intros",
      "unfold",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_227",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: f x = y",
      "H: exists x, P x"
    ],
    "tactics": [
      "exists",
      "simpl",
      "tauto",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_228",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: f x = y",
      "H: a <-> b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "auto",
      "assert",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_229",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: n = m",
      "H: a -> b",
      "H: a /\\ b"
    ],
    "tactics": [
      "rewrite H",
      "simpl",
      "auto",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_230",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: exists x, P x",
      "H: f x = y"
    ],
    "tactics": [
      "apply H",
      "reflexivity",
      "tauto",
      "tauto",
      "apply H",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_231",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "auto",
      "unfold",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_232",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a \\/ b",
      "H: ~ a",
      "H: a -> b"
    ],
    "tactics": [
      "assert",
      "destruct H as [H1 H2]",
      "split",
      "exists",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_233",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [],
    "tactics": [
      "intros",
      "apply H",
      "simpl",
      "unfold",
      "unfold",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_234",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: n <= m"
    ],
    "tactics": [
      "apply H",
      "destruct H as [H1 H2]",
      "reflexivity",
      "reflexivity",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_235",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: f x = y",
      "H: n = m"
    ],
    "tactics": [
      "unfold",
      "apply H",
      "simpl",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_236",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "auto",
      "simpl",
      "unfold",
      "apply H",
      "rewrite H",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_237",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a /\\ b",
      "H: exists x, P x"
    ],
    "tactics": [
      "reflexivity",
      "reflexivity",
      "simpl",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_238",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "exists",
      "reflexivity",
      "unfold",
      "rewrite H",
      "apply H",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_239",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: n <= m",
      "H: a /\\ b",
      "H: a \\/ b"
    ],
    "tactics": [
      "reflexivity",
      "apply H",
      "rewrite H",
      "split",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_240",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "reflexivity",
      "intros",
      "tauto",
      "tauto",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_241",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [],
    "tactics": [
      "intros",
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]",
      "simpl",
      "induction n",
      "exists",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_242",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [],
    "tactics": [
      "assert",
      "rewrite H",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_243",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: exists x, P x",
      "H: f x = y",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "split",
      "exists",
      "simpl",
      "assert",
      "apply H",
      "assert",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_244",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "auto",
      "induction n",
      "auto",
      "rewrite H",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_245",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "reflexivity",
      "auto",
      "reflexivity",
      "auto",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_246",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: ~ a"
    ],
    "tactics": [
      "split",
      "split",
      "tauto",
      "auto",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_247",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [],
    "tactics": [
      "tauto",
      "induction n",
      "assert",
      "split",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_248",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: f x = y",
      "H: a /\\ b",
      "H: n <= m"
    ],
    "tactics": [
      "assert",
      "tauto",
      "apply H",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_249",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [],
    "tactics": [
      "intros",
      "unfold",
      "destruct H as [H1 H2]",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_250",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a \\/ b",
      "H: exists x, P x"
    ],
    "tactics": [
      "assert",
      "apply H",
      "exists",
      "destruct H as [H1 H2]",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_251",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "assert",
      "tauto",
      "assert",
      "destruct H as [H1 H2]",
      "apply H",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_252",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: f x = y",
      "H: a \\/ b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "exists",
      "unfold",
      "tauto",
      "tauto",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_253",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: n = m",
      "H: n <= m"
    ],
    "tactics": [
      "tauto",
      "reflexivity",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_254",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: n = m",
      "H: a /\\ b",
      "H: a -> b"
    ],
    "tactics": [
      "intros",
      "rewrite H",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_255",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [],
    "tactics": [
      "simpl",
      "reflexivity",
      "induction n",
      "apply H",
      "exists",
      "exists",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_256",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: n <= m",
      "H: f x = y",
      "H: ~ a"
    ],
    "tactics": [
      "rewrite H",
      "apply H",
      "rewrite H",
      "simpl",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_257",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: exists x, P x",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "tauto",
      "rewrite H",
      "unfold",
      "assert",
      "unfold",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_258",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [],
    "tactics": [
      "destruct H as [H1 H2]",
      "simpl",
      "apply H",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_259",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a /\\ b",
      "H: n = m"
    ],
    "tactics": [
      "unfold",
      "split",
      "auto",
      "split",
      "rewrite H",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_260",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [],
    "tactics": [
      "simpl",
      "rewrite H",
      "induction n",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_261",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [],
    "tactics": [
      "reflexivity",
      "unfold",
      "tauto",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_262",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "exists",
      "induction n",
      "auto",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_263",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: a \\/ b",
      "H: a /\\ b"
    ],
    "tactics": [
      "assert",
      "unfold",
      "simpl",
      "intros",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_264",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: n = m",
      "H: forall x : nat, x + 0 = x",
      "H: a -> b"
    ],
    "tactics": [
      "simpl",
      "induction n",
      "rewrite H",
      "reflexivity",
      "tauto",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_265",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: n <= m",
      "H: a <-> b",
      "H: f x = y"
    ],
    "tactics": [
      "assert",
      "simpl",
      "intros",
      "destruct H as [H1 H2]",
      "exists",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_266",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: f x = y",
      "H: a \\/ b"
    ],
    "tactics": [
      "apply H",
      "rewrite H",
      "reflexivity",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_267",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "exists",
      "destruct H as [H1 H2]",
      "tauto",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_268",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "tauto",
      "unfold",
      "split",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_269",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "intros",
      "split",
      "unfold",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_270",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: n = m",
      "H: f x = y"
    ],
    "tactics": [
      "exists",
      "auto",
      "simpl",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_271",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "assert",
      "destruct H as [H1 H2]",
      "simpl",
      "simpl",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_272",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a \\/ b",
      "H: a /\\ b"
    ],
    "tactics": [
      "assert",
      "auto",
      "auto",
      "assert",
      "simpl",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_273",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: f x = y",
      "H: a \\/ b"
    ],
    "tactics": [
      "apply H",
      "unfold",
      "simpl",
      "destruct H as [H1 H2]",
      "auto",
      "apply H",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_274",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: n = m",
      "H: a -> b",
      "H: a \\/ b"
    ],
    "tactics": [
      "auto",
      "apply H",
      "destruct H as [H1 H2]",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_275",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a /\\ b",
      "H: exists x, P x",
      "H: ~ a"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "split",
      "induction n",
      "apply H",
      "unfold",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_276",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [],
    "tactics": [
      "assert",
      "apply H",
      "apply H",
      "destruct H as [H1 H2]",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_277",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: n = m",
      "H: exists x, P x",
      "H: a /\\ b"
    ],
    "tactics": [
      "induction n",
      "simpl",
      "intros",
      "apply H",
      "destruct H as [H1 H2]",
      "rewrite H",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_278",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [],
    "tactics": [
      "induction n",
      "exists",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_279",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "reflexivity",
      "reflexivity",
      "exists",
      "unfold",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_280",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [],
    "tactics": [
      "apply H",
      "assert",
      "tauto",
      "induction n",
      "unfold",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_281",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: exists x, P x",
      "H: n <= m"
    ],
    "tactics": [
      "unfold",
      "intros",
      "assert",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_282",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [],
    "tactics": [
      "reflexivity",
      "destruct H as [H1 H2]",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_283",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a <-> b",
      "H: ~ a",
      "H: a \\/ b"
    ],
    "tactics": [
      "assert",
      "apply H",
      "induction n",
      "auto",
      "intros",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_284",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "induction n",
      "apply H",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_285",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: n <= m",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "induction n",
      "split",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_286",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: exists x, P x",
      "H: a /\\ b"
    ],
    "tactics": [
      "exists",
      "exists",
      "exists",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_287",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: exists x, P x",
      "H: a -> b"
    ],
    "tactics": [
      "reflexivity",
      "unfold",
      "exists",
      "exists",
      "unfold",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_288",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: n = m",
      "H: exists x, P x",
      "H: n <= m"
    ],
    "tactics": [
      "intros",
      "auto",
      "unfold",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_289",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: a \\/ b",
      "H: a /\\ b"
    ],
    "tactics": [
      "auto",
      "unfold",
      "tauto",
      "destruct H as [H1 H2]",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_290",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "tauto",
      "split",
      "destruct H as [H1 H2]",
      "intros",
      "split",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_291",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [],
    "tactics": [
      "rewrite H",
      "rewrite H",
      "intros",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_292",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: n <= m",
      "H: ~ a"
    ],
    "tactics": [
      "induction n",
      "reflexivity",
      "apply H",
      "reflexivity",
      "intros",
      "rewrite H",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_293",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a -> b"
    ],
    "tactics": [
      "assert",
      "intros",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_294",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "reflexivity",
      "induction n",
      "split",
      "intros",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_295",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [],
    "tactics": [
      "assert",
      "exists",
      "tauto",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_296",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: ~ a"
    ],
    "tactics": [
      "reflexivity",
      "split",
      "exists",
      "induction n",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_297",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a -> b",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "apply H",
      "destruct H as [H1 H2]",
      "assert",
      "reflexivity",
      "destruct H as [H1 H2]",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_298",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: n <= m",
      "H: a /\\ b",
      "H: n = m"
    ],
    "tactics": [
      "assert",
      "assert",
      "induction n",
      "induction n",
      "induction n",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_299",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: n <= m",
      "H: a <-> b",
      "H: a -> b"
    ],
    "tactics": [
      "reflexivity",
      "split",
      "simpl",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_300",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: n <= m"
    ],
    "tactics": [
      "rewrite H",
      "destruct H as [H1 H2]",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_301",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: ~ a",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "intros",
      "reflexivity",
      "exists",
      "exists",
      "exists",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_302",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: exists x, P x",
      "H: n = m"
    ],
    "tactics": [
      "simpl",
      "rewrite H",
      "destruct H as [H1 H2]",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_303",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: n <= m",
      "H: a /\\ b",
      "H: f x = y"
    ],
    "tactics": [
      "intros",
      "unfold",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_304",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "exists",
      "induction n",
      "reflexivity",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_305",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: n <= m"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "tauto",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_306",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: n <= m"
    ],
    "tactics": [
      "simpl",
      "apply H",
      "induction n",
      "split",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_307",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a <-> b",
      "H: f x = y",
      "H: n <= m"
    ],
    "tactics": [
      "reflexivity",
      "simpl",
      "destruct H as [H1 H2]",
      "unfold",
      "destruct H as [H1 H2]",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_308",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "auto",
      "intros",
      "exists",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_309",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a <-> b",
      "H: n = m"
    ],
    "tactics": [
      "intros",
      "reflexivity",
      "apply H",
      "reflexivity",
      "intros",
      "intros",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_310",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: ~ a",
      "H: a /\\ b"
    ],
    "tactics": [
      "auto",
      "reflexivity",
      "reflexivity",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_311",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "split",
      "auto",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_312",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "tauto",
      "assert",
      "split",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_313",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a \\/ b",
      "H: ~ a",
      "H: n <= m"
    ],
    "tactics": [
      "intros",
      "intros",
      "reflexivity",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_314",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [],
    "tactics": [
      "assert",
      "reflexivity",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_315",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: n = m"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "tauto",
      "reflexivity",
      "destruct H as [H1 H2]",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_316",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: n <= m",
      "H: ~ a"
    ],
    "tactics": [
      "assert",
      "auto",
      "apply H",
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]",
      "simpl",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_317",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a /\\ b",
      "H: forall x : nat, x + 0 = x",
      "H: f x = y"
    ],
    "tactics": [
      "simpl",
      "apply H",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_318",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: n <= m",
      "H: n = m",
      "H: a /\\ b"
    ],
    "tactics": [
      "unfold",
      "apply H",
      "induction n",
      "unfold",
      "intros",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_319",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "reflexivity",
      "auto",
      "rewrite H",
      "unfold",
      "destruct H as [H1 H2]",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_320",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a <-> b"
    ],
    "tactics": [
      "unfold",
      "simpl",
      "apply H",
      "tauto",
      "unfold",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_321",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a <-> b"
    ],
    "tactics": [
      "induction n",
      "rewrite H",
      "apply H",
      "unfold",
      "unfold",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_322",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: n = m",
      "H: forall x : nat, x + 0 = x",
      "H: exists x, P x"
    ],
    "tactics": [
      "intros",
      "split",
      "split",
      "intros",
      "apply H",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_323",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: n = m",
      "H: a \\/ b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "split",
      "tauto",
      "exists",
      "exists",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_324",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [],
    "tactics": [
      "destruct H as [H1 H2]",
      "reflexivity",
      "tauto",
      "assert",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_325",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "assert",
      "exists",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_326",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: n <= m"
    ],
    "tactics": [
      "tauto",
      "induction n",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_327",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "auto",
      "intros",
      "split",
      "induction n",
      "exists",
      "unfold",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_328",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: f x = y",
      "H: n <= m",
      "H: exists x, P x"
    ],
    "tactics": [
      "exists",
      "auto",
      "tauto",
      "rewrite H",
      "assert",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_329",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a <-> b",
      "H: n <= m"
    ],
    "tactics": [
      "reflexivity",
      "rewrite H",
      "rewrite H",
      "rewrite H",
      "exists",
      "auto",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_330",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: n <= m"
    ],
    "tactics": [
      "unfold",
      "exists",
      "exists",
      "reflexivity",
      "auto",
      "induction n",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_331",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a /\\ b",
      "H: n = m",
      "H: a <-> b"
    ],
    "tactics": [
      "assert",
      "tauto",
      "tauto",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_332",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [],
    "tactics": [
      "unfold",
      "apply H",
      "exists",
      "reflexivity",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_333",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: n = m",
      "H: exists x, P x"
    ],
    "tactics": [
      "induction n",
      "tauto",
      "reflexivity",
      "destruct H as [H1 H2]",
      "split",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_334",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: f x = y",
      "H: a <-> b"
    ],
    "tactics": [
      "rewrite H",
      "tauto",
      "auto",
      "rewrite H",
      "assert",
      "unfold",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_335",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "assert",
      "split",
      "assert",
      "simpl",
      "simpl",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_336",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: n <= m"
    ],
    "tactics": [
      "intros",
      "tauto",
      "reflexivity",
      "exists",
      "reflexivity",
      "assert",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_337",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [],
    "tactics": [
      "simpl",
      "induction n",
      "split",
      "split",
      "induction n",
      "apply H",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_338",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a -> b",
      "H: a \\/ b"
    ],
    "tactics": [
      "split",
      "unfold",
      "split",
      "tauto",
      "reflexivity",
      "intros",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_339",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: exists x, P x",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "assert",
      "split",
      "auto",
      "assert",
      "intros",
      "split"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_340",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a <-> b",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "simpl",
      "tauto",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_341",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "split",
      "auto",
      "auto",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_342",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: n <= m",
      "H: n = m",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "intros",
      "simpl",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_343",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: ~ a",
      "H: exists x, P x",
      "H: a <-> b"
    ],
    "tactics": [
      "intros",
      "induction n",
      "reflexivity",
      "apply H",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_344",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a <-> b",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "tauto",
      "reflexivity",
      "assert",
      "exists",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_345",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a <-> b"
    ],
    "tactics": [
      "simpl",
      "auto",
      "induction n",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_346",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "intros",
      "exists",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_347",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a <-> b",
      "H: a /\\ b",
      "H: f x = y"
    ],
    "tactics": [
      "rewrite H",
      "exists",
      "assert",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_348",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a <-> b",
      "H: forall x : nat, x + 0 = x",
      "H: a -> b"
    ],
    "tactics": [
      "assert",
      "apply H",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_349",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: f x = y",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "unfold",
      "unfold",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_350",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a /\\ b",
      "H: n = m",
      "H: n <= m"
    ],
    "tactics": [
      "tauto",
      "rewrite H",
      "auto",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_351",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: ~ a",
      "H: n <= m",
      "H: a -> b"
    ],
    "tactics": [
      "split",
      "apply H",
      "simpl",
      "reflexivity",
      "exists",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_352",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [],
    "tactics": [
      "split",
      "reflexivity",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_353",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a <-> b",
      "H: f x = y"
    ],
    "tactics": [
      "reflexivity",
      "tauto",
      "simpl",
      "destruct H as [H1 H2]",
      "induction n",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_354",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a <-> b",
      "H: n = m"
    ],
    "tactics": [
      "tauto",
      "exists",
      "reflexivity",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_355",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: n = m",
      "H: a \\/ b"
    ],
    "tactics": [
      "rewrite H",
      "apply H",
      "assert",
      "destruct H as [H1 H2]",
      "rewrite H",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_356",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "reflexivity",
      "destruct H as [H1 H2]",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_357",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: n <= m",
      "H: forall x : nat, x + 0 = x",
      "H: a -> b"
    ],
    "tactics": [
      "rewrite H",
      "split",
      "induction n",
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_358",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "reflexivity",
      "assert",
      "rewrite H",
      "simpl",
      "simpl",
      "simpl",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_359",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: ~ a",
      "H: f x = y",
      "H: a \\/ b"
    ],
    "tactics": [
      "simpl",
      "reflexivity",
      "induction n",
      "intros",
      "rewrite H",
      "intros",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_360",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: n = m"
    ],
    "tactics": [
      "assert",
      "simpl",
      "split",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_361",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: ~ a"
    ],
    "tactics": [
      "unfold",
      "unfold",
      "simpl",
      "rewrite H",
      "induction n",
      "exists",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_362",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: ~ a",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "induction n",
      "induction n",
      "simpl",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_363",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [],
    "tactics": [
      "unfold",
      "exists",
      "exists",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_364",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [],
    "tactics": [
      "split",
      "induction n",
      "destruct H as [H1 H2]",
      "intros",
      "auto",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_365",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "simpl",
      "assert",
      "unfold",
      "tauto",
      "rewrite H",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_366",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [],
    "tactics": [
      "intros",
      "induction n",
      "reflexivity",
      "rewrite H",
      "auto",
      "tauto",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_367",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a -> b",
      "H: a <-> b"
    ],
    "tactics": [
      "exists",
      "destruct H as [H1 H2]",
      "exists",
      "assert",
      "reflexivity",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_368",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: a <-> b",
      "H: f x = y"
    ],
    "tactics": [
      "assert",
      "assert",
      "exists",
      "destruct H as [H1 H2]",
      "tauto",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_369",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a /\\ b",
      "H: forall x : nat, x + 0 = x",
      "H: a \\/ b"
    ],
    "tactics": [
      "induction n",
      "tauto",
      "destruct H as [H1 H2]",
      "tauto",
      "split",
      "exists",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_370",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: ~ a"
    ],
    "tactics": [
      "induction n",
      "apply H",
      "apply H",
      "assert",
      "rewrite H",
      "destruct H as [H1 H2]",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_371",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [],
    "tactics": [
      "reflexivity",
      "unfold",
      "unfold",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_372",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "reflexivity",
      "intros",
      "destruct H as [H1 H2]",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_373",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: exists x, P x",
      "H: a \\/ b",
      "H: n = m"
    ],
    "tactics": [
      "apply H",
      "split",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_374",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: f x = y",
      "H: n = m",
      "H: a -> b"
    ],
    "tactics": [
      "induction n",
      "split",
      "apply H",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_375",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a <-> b",
      "H: a -> b"
    ],
    "tactics": [
      "induction n",
      "exists",
      "unfold",
      "tauto",
      "rewrite H",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_376",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "apply H",
      "induction n",
      "reflexivity",
      "tauto",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_377",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [],
    "tactics": [
      "rewrite H",
      "assert",
      "apply H",
      "induction n",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_378",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a \\/ b",
      "H: a -> b"
    ],
    "tactics": [
      "auto",
      "reflexivity",
      "rewrite H",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_379",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "exists",
      "destruct H as [H1 H2]",
      "simpl",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_380",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [],
    "tactics": [
      "intros",
      "unfold",
      "destruct H as [H1 H2]",
      "exists",
      "destruct H as [H1 H2]",
      "unfold",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_381",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "intros",
      "split",
      "tauto",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_382",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: a <-> b",
      "H: ~ a"
    ],
    "tactics": [
      "auto",
      "intros",
      "intros",
      "reflexivity",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_383",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: a \\/ b",
      "H: a -> b"
    ],
    "tactics": [
      "exists",
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]",
      "simpl",
      "unfold",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_384",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a -> b",
      "H: ~ a",
      "H: a /\\ b"
    ],
    "tactics": [
      "simpl",
      "exists",
      "reflexivity",
      "rewrite H",
      "apply H",
      "auto",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_385",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: ~ a"
    ],
    "tactics": [
      "simpl",
      "induction n",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_386",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [],
    "tactics": [
      "apply H",
      "auto",
      "simpl",
      "intros",
      "rewrite H",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_387",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: n <= m",
      "H: a <-> b"
    ],
    "tactics": [
      "tauto",
      "assert",
      "destruct H as [H1 H2]",
      "intros",
      "induction n",
      "apply H",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_388",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: n <= m",
      "H: a <-> b"
    ],
    "tactics": [
      "tauto",
      "auto",
      "unfold",
      "apply H",
      "induction n",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_389",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: f x = y",
      "H: exists x, P x",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "simpl",
      "destruct H as [H1 H2]",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_390",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a -> b",
      "H: ~ a",
      "H: n <= m"
    ],
    "tactics": [
      "split",
      "unfold",
      "induction n",
      "simpl",
      "simpl",
      "intros",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_391",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "apply H",
      "apply H",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_392",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: f x = y",
      "H: a /\\ b"
    ],
    "tactics": [
      "reflexivity",
      "induction n",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_393",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "simpl",
      "intros",
      "intros",
      "reflexivity",
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_394",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "unfold",
      "reflexivity",
      "auto",
      "reflexivity",
      "exists",
      "induction n",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_395",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a -> b",
      "H: n <= m",
      "H: exists x, P x"
    ],
    "tactics": [
      "simpl",
      "assert",
      "intros",
      "intros",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_396",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [],
    "tactics": [
      "tauto",
      "unfold",
      "assert",
      "intros",
      "tauto",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_397",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a <-> b",
      "H: exists x, P x",
      "H: f x = y"
    ],
    "tactics": [
      "simpl",
      "auto",
      "auto",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_398",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a <-> b"
    ],
    "tactics": [
      "tauto",
      "auto",
      "reflexivity",
      "assert",
      "assert",
      "reflexivity",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_399",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: ~ a"
    ],
    "tactics": [
      "unfold",
      "assert",
      "auto",
      "exists",
      "unfold",
      "rewrite H",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_400",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [],
    "tactics": [
      "assert",
      "simpl",
      "auto",
      "unfold",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_401",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a \\/ b",
      "H: n <= m",
      "H: exists x, P x"
    ],
    "tactics": [
      "tauto",
      "tauto",
      "unfold",
      "destruct H as [H1 H2]",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_402",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: a <-> b",
      "H: ~ a"
    ],
    "tactics": [
      "rewrite H",
      "assert",
      "induction n",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_403",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [],
    "tactics": [
      "unfold",
      "auto",
      "tauto",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_404",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: n = m"
    ],
    "tactics": [
      "split",
      "apply H",
      "assert",
      "unfold",
      "reflexivity",
      "assert",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_405",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "intros",
      "simpl",
      "tauto",
      "assert",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_406",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: f x = y",
      "H: a /\\ b",
      "H: n <= m"
    ],
    "tactics": [
      "rewrite H",
      "simpl",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_407",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a /\\ b",
      "H: a <-> b"
    ],
    "tactics": [
      "simpl",
      "unfold",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_408",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: n <= m",
      "H: a /\\ b",
      "H: a -> b"
    ],
    "tactics": [
      "unfold",
      "auto",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_409",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a <-> b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "auto",
      "unfold",
      "assert",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_410",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a <-> b",
      "H: n <= m"
    ],
    "tactics": [
      "intros",
      "tauto",
      "reflexivity",
      "split",
      "induction n",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_411",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: n <= m"
    ],
    "tactics": [
      "reflexivity",
      "split",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_412",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: n <= m",
      "H: exists x, P x"
    ],
    "tactics": [
      "apply H",
      "apply H",
      "split",
      "reflexivity",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_413",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [],
    "tactics": [
      "rewrite H",
      "apply H",
      "intros",
      "exists",
      "reflexivity",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_414",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a \\/ b",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "rewrite H",
      "reflexivity",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_415",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: n <= m",
      "H: n = m",
      "H: a -> b"
    ],
    "tactics": [
      "intros",
      "auto",
      "apply H",
      "assert",
      "apply H",
      "rewrite H",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_416",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a \\/ b",
      "H: f x = y",
      "H: a <-> b"
    ],
    "tactics": [
      "reflexivity",
      "simpl",
      "split",
      "auto",
      "split",
      "induction n",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_417",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "tauto",
      "simpl",
      "split",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_418",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a <-> b",
      "H: n <= m"
    ],
    "tactics": [
      "induction n",
      "tauto",
      "reflexivity",
      "induction n",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_419",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: n <= m",
      "H: ~ a"
    ],
    "tactics": [
      "induction n",
      "intros",
      "auto",
      "intros",
      "assert",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_420",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "intros",
      "tauto",
      "auto",
      "assert",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_421",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: a -> b"
    ],
    "tactics": [
      "exists",
      "rewrite H",
      "rewrite H",
      "assert",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_422",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: ~ a",
      "H: a /\\ b"
    ],
    "tactics": [
      "auto",
      "auto",
      "exists",
      "apply H",
      "exists",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_423",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [],
    "tactics": [
      "destruct H as [H1 H2]",
      "induction n",
      "induction n",
      "apply H",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_424",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a <-> b",
      "H: n = m"
    ],
    "tactics": [
      "split",
      "exists",
      "simpl",
      "destruct H as [H1 H2]",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_425",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "induction n",
      "assert",
      "tauto",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_426",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "induction n",
      "assert",
      "apply H",
      "induction n",
      "split",
      "induction n",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_427",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: f x = y",
      "H: a \\/ b",
      "H: a <-> b"
    ],
    "tactics": [
      "apply H",
      "assert",
      "tauto",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_428",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: n <= m",
      "H: a \\/ b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "exists",
      "reflexivity",
      "intros",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_429",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: ~ a"
    ],
    "tactics": [
      "rewrite H",
      "rewrite H",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_430",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [],
    "tactics": [
      "exists",
      "simpl",
      "assert",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_431",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a \\/ b",
      "H: a <-> b"
    ],
    "tactics": [
      "rewrite H",
      "split",
      "split",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_432",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: f x = y",
      "H: a <-> b",
      "H: n = m"
    ],
    "tactics": [
      "simpl",
      "intros",
      "assert",
      "rewrite H",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_433",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a -> b",
      "H: n <= m",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "assert",
      "reflexivity",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_434",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: f x = y",
      "H: a <-> b",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "rewrite H",
      "split",
      "unfold",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_435",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: exists x, P x",
      "H: a /\\ b",
      "H: n = m"
    ],
    "tactics": [
      "reflexivity",
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]",
      "reflexivity",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_436",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "assert",
      "rewrite H",
      "simpl",
      "destruct H as [H1 H2]",
      "induction n",
      "reflexivity",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_437",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "induction n",
      "assert",
      "exists",
      "destruct H as [H1 H2]"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_438",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a /\\ b"
    ],
    "tactics": [
      "auto",
      "auto",
      "split",
      "simpl",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_439",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [],
    "tactics": [
      "destruct H as [H1 H2]",
      "simpl",
      "auto",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_440",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "simpl",
      "simpl",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_441",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "apply H",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_442",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "unfold",
      "simpl",
      "simpl",
      "rewrite H",
      "rewrite H",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_443",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "unfold",
      "exists",
      "unfold",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_444",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: n <= m",
      "H: exists x, P x",
      "H: n = m"
    ],
    "tactics": [
      "apply H",
      "unfold",
      "unfold",
      "intros",
      "rewrite H",
      "split",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_445",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: ~ a",
      "H: exists x, P x"
    ],
    "tactics": [
      "tauto",
      "assert",
      "unfold",
      "simpl",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_446",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: a <-> b",
      "H: f x = y"
    ],
    "tactics": [
      "tauto",
      "exists",
      "auto",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_447",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "unfold",
      "exists",
      "auto",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_448",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [],
    "tactics": [
      "auto",
      "unfold",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_449",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "induction n",
      "intros",
      "tauto",
      "simpl",
      "destruct H as [H1 H2]",
      "exists",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_450",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: a -> b",
      "H: f x = y",
      "H: ~ a"
    ],
    "tactics": [
      "reflexivity",
      "simpl",
      "apply H",
      "simpl",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_451",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a <-> b",
      "H: n = m",
      "H: ~ a"
    ],
    "tactics": [
      "rewrite H",
      "exists",
      "reflexivity",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_452",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: f x = y",
      "H: a <-> b"
    ],
    "tactics": [
      "intros",
      "simpl",
      "simpl",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_453",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "apply H",
      "induction n",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_454",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: n = m",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]",
      "induction n",
      "apply H",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_455",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: n <= m",
      "H: a <-> b"
    ],
    "tactics": [
      "split",
      "rewrite H",
      "auto",
      "rewrite H",
      "exists",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_456",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a -> b",
      "H: a <-> b"
    ],
    "tactics": [
      "exists",
      "destruct H as [H1 H2]",
      "simpl",
      "exists",
      "exists",
      "unfold",
      "split"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_457",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: n = m"
    ],
    "tactics": [
      "intros",
      "unfold",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_458",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [],
    "tactics": [
      "destruct H as [H1 H2]",
      "split",
      "tauto",
      "reflexivity",
      "rewrite H"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_459",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [],
    "tactics": [
      "assert",
      "split",
      "split",
      "destruct H as [H1 H2]",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_460",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: f x = y",
      "H: n = m",
      "H: a /\\ b"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "destruct H as [H1 H2]",
      "reflexivity",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_461",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: a <-> b",
      "H: n <= m",
      "H: ~ a"
    ],
    "tactics": [
      "auto",
      "intros",
      "split",
      "assert",
      "exists",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_462",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: n <= m",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "assert",
      "intros",
      "destruct H as [H1 H2]",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_463",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [],
    "tactics": [
      "auto",
      "destruct H as [H1 H2]",
      "auto",
      "intros",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_464",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a \\/ b",
      "H: a <-> b"
    ],
    "tactics": [
      "simpl",
      "apply H",
      "destruct H as [H1 H2]",
      "tauto",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_465",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: a \\/ b"
    ],
    "tactics": [
      "unfold",
      "auto",
      "split",
      "assert",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_466",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [],
    "tactics": [
      "induction n",
      "auto",
      "split",
      "apply H",
      "intros",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_467",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [],
    "tactics": [
      "tauto",
      "reflexivity",
      "auto",
      "assert",
      "intros",
      "exists",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_468",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a <-> b",
      "H: n <= m"
    ],
    "tactics": [
      "reflexivity",
      "apply H",
      "assert",
      "simpl",
      "simpl",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_469",
    "goal": "forall (A B C : Prop), (A -> B -> C) -> (A /\\ B -> C)",
    "hypotheses": [
      "H: a <-> b",
      "H: n <= m"
    ],
    "tactics": [
      "simpl",
      "auto",
      "tauto",
      "assert",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "lists"
  },
  {
    "id": "theorem_470",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: a <-> b",
      "H: ~ a"
    ],
    "tactics": [
      "simpl",
      "intros",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_471",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a /\\ b",
      "H: ~ a",
      "H: n <= m"
    ],
    "tactics": [
      "destruct H as [H1 H2]",
      "rewrite H",
      "auto",
      "tauto",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_472",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: ~ a",
      "H: a -> b"
    ],
    "tactics": [
      "unfold",
      "rewrite H",
      "rewrite H",
      "simpl",
      "exists",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_473",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: ~ a",
      "H: n = m",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "apply H",
      "destruct H as [H1 H2]",
      "unfold",
      "unfold",
      "simpl",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Relations.Relation_Definitions."
    ],
    "difficulty": "easy",
    "domain": "relations"
  },
  {
    "id": "theorem_474",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: a <-> b",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "split",
      "unfold",
      "induction n",
      "exists",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_475",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: n <= m",
      "H: a \\/ b"
    ],
    "tactics": [
      "induction n",
      "tauto",
      "induction n",
      "exists",
      "tauto",
      "destruct H as [H1 H2]",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_476",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: forall x : nat, x + 0 = x",
      "H: ~ a",
      "H: n <= m"
    ],
    "tactics": [
      "apply H",
      "unfold",
      "simpl",
      "assert",
      "induction n",
      "apply H",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_477",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [],
    "tactics": [
      "simpl",
      "exists",
      "tauto",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_478",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: exists x, P x",
      "H: ~ a"
    ],
    "tactics": [
      "rewrite H",
      "reflexivity",
      "destruct H as [H1 H2]",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_479",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [],
    "tactics": [
      "split",
      "induction n",
      "simpl",
      "assert",
      "intros",
      "destruct H as [H1 H2]",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_480",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: n = m",
      "H: a \\/ b"
    ],
    "tactics": [
      "auto",
      "exists",
      "induction n",
      "reflexivity",
      "destruct H as [H1 H2]",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_481",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: a /\\ b",
      "H: a \\/ b",
      "H: exists x, P x"
    ],
    "tactics": [
      "induction n",
      "simpl",
      "assert",
      "reflexivity",
      "simpl"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_482",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: exists x, P x",
      "H: a /\\ b",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "reflexivity",
      "tauto",
      "induction n",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_483",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: exists x, P x",
      "H: n <= m",
      "H: a \\/ b"
    ],
    "tactics": [
      "induction n",
      "exists",
      "intros",
      "exists"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_484",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: n = m",
      "H: f x = y"
    ],
    "tactics": [
      "unfold",
      "auto",
      "destruct H as [H1 H2]",
      "apply H",
      "exists",
      "unfold",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_485",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [],
    "tactics": [
      "exists",
      "apply H",
      "rewrite H",
      "unfold",
      "reflexivity",
      "auto",
      "reflexivity"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_486",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [],
    "tactics": [
      "split",
      "tauto",
      "intros",
      "unfold",
      "unfold"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_487",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a -> b",
      "H: a /\\ b"
    ],
    "tactics": [
      "auto",
      "exists",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Arith.Arith."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_488",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "reflexivity",
      "assert",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Lists.List.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_489",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [],
    "tactics": [
      "assert",
      "simpl",
      "exists",
      "assert",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Arith.Arith.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "logic"
  },
  {
    "id": "theorem_490",
    "goal": "forall n m : nat, n * (m + 1) = n * m + n",
    "hypotheses": [
      "H: ~ a"
    ],
    "tactics": [
      "tauto",
      "simpl",
      "assert",
      "tauto",
      "auto"
    ],
    "libraries": [
      "Require Import Coq.ZArith.ZArith."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_491",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [],
    "tactics": [
      "exists",
      "simpl",
      "unfold",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_492",
    "goal": "forall (A B : Prop), A /\\ B -> B /\\ A",
    "hypotheses": [
      "H: f x = y"
    ],
    "tactics": [
      "intros",
      "reflexivity",
      "assert",
      "tauto",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "medium",
    "domain": "relations"
  },
  {
    "id": "theorem_493",
    "goal": "forall n m : nat, n <= m -> m >= n",
    "hypotheses": [
      "H: ~ a",
      "H: a <-> b"
    ],
    "tactics": [
      "induction n",
      "reflexivity",
      "auto",
      "induction n"
    ],
    "libraries": [
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Bool.Bool."
    ],
    "difficulty": "hard",
    "domain": "relations"
  },
  {
    "id": "theorem_494",
    "goal": "forall n m : nat, n + m = m + n",
    "hypotheses": [
      "H: ~ a",
      "H: exists x, P x"
    ],
    "tactics": [
      "split",
      "reflexivity",
      "intros",
      "apply H",
      "split"
    ],
    "libraries": [
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "hard",
    "domain": "lists"
  },
  {
    "id": "theorem_495",
    "goal": "forall (A : Type) (x y : A), x = y -> y = x",
    "hypotheses": [
      "H: a -> b",
      "H: forall x : nat, x + 0 = x"
    ],
    "tactics": [
      "reflexivity",
      "exists",
      "induction n",
      "unfold",
      "tauto"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Strings.String."
    ],
    "difficulty": "hard",
    "domain": "logic"
  },
  {
    "id": "theorem_496",
    "goal": "forall n : nat, n * 0 = 0",
    "hypotheses": [
      "H: a /\\ b",
      "H: n <= m"
    ],
    "tactics": [
      "intros",
      "reflexivity",
      "intros",
      "apply H",
      "intros",
      "induction n",
      "apply H"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles.",
      "Require Import Coq.Logic.Classical."
    ],
    "difficulty": "medium",
    "domain": "logic"
  },
  {
    "id": "theorem_497",
    "goal": "forall (A B : Prop), A \\/ B -> B \\/ A",
    "hypotheses": [
      "H: a \\/ b",
      "H: n = m"
    ],
    "tactics": [
      "exists",
      "apply H",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Logic.Classical.",
      "Require Import Coq.Relations.Relation_Definitions.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "easy",
    "domain": "arithmetic"
  },
  {
    "id": "theorem_498",
    "goal": "forall n : nat, n + 0 = n",
    "hypotheses": [
      "H: exists x, P x"
    ],
    "tactics": [
      "tauto",
      "simpl",
      "apply H",
      "auto",
      "simpl",
      "assert",
      "assert"
    ],
    "libraries": [
      "Require Import Coq.Bool.Bool.",
      "Require Import Coq.Sets.Ensembles."
    ],
    "difficulty": "medium",
    "domain": "lists"
  },
  {
    "id": "theorem_499",
    "goal": "forall (A : Type) (x y z : A), x = y -> y = z -> x = z",
    "hypotheses": [
      "H: a -> b",
      "H: a /\\ b"
    ],
    "tactics": [
      "assert",
      "tauto",
      "intros"
    ],
    "libraries": [
      "Require Import Coq.Strings.String.",
      "Require Import Coq.Lists.List."
    ],
    "difficulty": "easy",
    "domain": "lists"
  }
]